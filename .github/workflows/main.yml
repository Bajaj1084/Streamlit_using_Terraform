name: Deploy
on:
  push:
    branches:
      - main
      - dev
      - test
    
env:
  PYTHON_VERSION: '3.8'

  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    
    - name: Environment
      id: set-env
      run: |
            if [[ "${{ github.ref_name }}" == "main" ]]; then
              echo "Deployment to Prod"
            elif [[ "${{ github.ref_name }}" == "dev" ]]; then
              echo "Deployment to Dev"
            elif [[ "${{ github.ref_name }}" == "test" ]]; then
              echo "Deployment to Test"
            else
              echo "Invalid branch for deployment"
            exit 1
            fi
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}


    - name: 'Install snowcli and pytest environment'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install snowflake-cli-labs

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: 'Create config'
    #   shell: bash
    #   env:
    #       SNOWFLAKE_PASSWORD: ${{ secrets.SNOWCLI_PW }}
          
      
    #   run: |
    #     # mkdir -p ~/.snowflake
    #     # cp config.toml ~/.snowflake/config.toml
    #     # echo "password = \"$SNOWFLAKE_PASSWORD\"" >> ~/.snowflake/config.toml
    #     # chmod 0600 ~/.snowflake/config.toml


        # if [[ "${{ github.ref_name }}" == "main" ]]; then
        #       mkdir -p ~/.snowflake
        #       cp ./prod/config.toml ~/.snowflake/config.toml
        #       echo "password = \"$SNOWFLAKE_PASSWORD\"" >> ~/.snowflake/config.toml
        #       chmod 0600 ~/.snowflake/config.toml
              
        # elif [[ "${{ github.ref_name }}" == "dev" ]]; then
        #       mkdir -p ~/.snowflake
        #       cp ./dev/config.toml ~/.snowflake/config.toml
        #       echo "password = \"$SNOWFLAKE_PASSWORD\"" >> ~/.snowflake/config.toml
        #       chmod 0600 ~/.snowflake/config.toml
              
        # elif [[ "${{ github.ref_name }}" == "test" ]]; then
        #       mkdir -p ~/.snowflake
        #       cp ./test/config.toml ~/.snowflake/config.toml
        #       echo "password = \"$SNOWFLAKE_PASSWORD\"" >> ~/.snowflake/config.toml
        #       chmod 0600 ~/.snowflake/config.toml
        # else
        #       echo "Invalid branch for deployment"
        # exit 1
        # fi
        

    # - name: Test Snowflake Connection
    #   shell: bash
    #   run: |
    #     snowflake-cli "SELECT CURRENT_USER();"
    #   continue-on-error: false

    # - name: Terraform Format
    #   id: fmt
    #   run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan
      
    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve

   
   

    # - name: 'Deploy the Streamlit app'
    #   shell: bash
    #   run: |
    #     if [[ "${{ github.ref_name }}" == "main" ]]; then
    #       env_directory="./prod"
    #     elif [[ "${{ github.ref_name }}" == "dev" ]]; then
    #       env_directory="./dev"
    #     elif [[ "${{ github.ref_name }}" == "test" ]]; then
    #       env_directory="./test"
    #     else
    #       echo "Error: Invalid branch name."
    #       exit 1
    #     fi
        
    #     echo "Using environment directory: $env_directory"
    #     cd $env_directory
    #     snow streamlit deploy --replace
